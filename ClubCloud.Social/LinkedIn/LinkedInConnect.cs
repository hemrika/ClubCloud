using System;
using System.Collections.Specialized;
using System.Data;
using System.IO;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Script.Serialization;

namespace ClubCloud.Social.LinkedIn
{
    public class LinkedInConnect
    {
        public static string APIKey
        {
            get;
            set;
        }

        public static string APISecret
        {
            get;
            set;
        }

        public static bool IsAuthorized
        {
            get
            {
                return !string.IsNullOrEmpty(HttpContext.Current.Request.QueryString[LinkedInUtils.Convert("gU??")]);
            }
        }

        public static string RedirectUrl
        {
            get;
            set;
        }

        public LinkedInConnect()
        {
        }

        public static void Authorize()
        {
            LinkedInActions _u003f3u003f = new LinkedInActions()
            {
                Url = LinkedInUtils.Convert("Yn?????????????????????????????????)?????????????")
            };
            _u003f3u003f.Add(LinkedInUtils.Convert("\u007fu???????????"), LinkedInUtils.Convert("gU??"));
            _u003f3u003f.Add(LinkedInUtils.Convert("jT???????"), LinkedInConnect.APIKey);
            _u003f3u003f.Add(LinkedInUtils.Convert("vt???"), LinkedInUtils.Convert("oN???????????????????????????"));
            _u003f3u003f.Add(LinkedInUtils.Convert("vU???"), LinkedInUtils.Convert("VO???"));
            _u003f3u003f.Add(LinkedInUtils.Convert("~U??????????"), LinkedInConnect.RedirectUrl);
            _u003f3u003f.Post();
        }

        public static DataSet Fetch(string u003f6u003f = "")
        {
            DataSet dataSet;
            LinkedInActions _u003f3u003f = new LinkedInActions()
            {
                Url = LinkedInUtils.Convert("GS???????????????????????????????????-?????????")
            };
            _u003f3u003f.Add(LinkedInUtils.Convert("mZ????????"), LinkedInUtils.Convert("sT????????????????"));
            _u003f3u003f.Add(LinkedInUtils.Convert("gU??"), HttpContext.Current.Request.QueryString[LinkedInUtils.Convert("gU??")]);
            _u003f3u003f.Add(LinkedInUtils.Convert("jT???????"), LinkedInConnect.APIKey);
            _u003f3u003f.Add(LinkedInUtils.Convert("nŠ???????????"), LinkedInConnect.APISecret);
            _u003f3u003f.Add(LinkedInUtils.Convert("~U??????????"), LinkedInConnect.RedirectUrl);
            string str = _u003f3u003f.WebRemotePost();
            LinkedInToken _u003f4u003f = (new JavaScriptSerializer()).Deserialize<LinkedInToken>(str);
            if (string.IsNullOrEmpty(u003f6u003f))
            {
                u003f6u003f = LinkedInUtils.Convert("\u0092?????????????????????\u1680?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\ud840\ud94d\uda4c\udb4d\udc7a\udd70\ude79\udf7d???????????????????????????");
            }
            _u003f3u003f = new LinkedInActions()
            {
                Url = string.Concat(LinkedInUtils.Convert("No????????????????????????????????????"), u003f6u003f, LinkedInUtils.Convert("("))
            };
            _u003f3u003f.Add(LinkedInUtils.Convert("|u?????????????????"), _u003f4u003f.access_token);
            str = _u003f3u003f.WebRemoteGet();
            DataSet dataSet1 = new DataSet();
            try
            {
                dataSet1.ReadXml(new StringReader(str));
                dataSet = dataSet1;
            }
            finally
            {
                if (dataSet1 != null)
                {
                    ((IDisposable)dataSet1).Dispose();
                }
            }
            return dataSet;
        }
    }
}