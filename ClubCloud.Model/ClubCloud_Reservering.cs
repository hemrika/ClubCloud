//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClubCloud.Model
{
    using System;
    using System.Runtime.Serialization;
    using System.Collections.Generic;
    
    using System.ComponentModel;
    using System.Runtime.CompilerServices;
    
    [Serializable]
    [KnownType(typeof(ClubCloud_Baan))]
    [KnownType(typeof(ClubCloud_Gebruiker))]
    [DataContract(IsReference = true)]
    
    public partial class ClubCloud_Reservering : INotifyPropertyChanged, IDataErrorInfo, INotifyDataErrorInfo
    {
    	[DataMember]
        public System.Guid Id 
    	{ 
    		get { return _id; } 
    		set { SetProperty(ref _id, value); } 
    	}
    
    	[IgnoreDataMember]
    	private System.Guid _id;
    
    	[DataMember]
        public Nullable<System.Guid> BaanId 
    	{ 
    		get { return _baanId; } 
    		set { SetProperty(ref _baanId, value); } 
    	}
    
    	[IgnoreDataMember]
    	private Nullable<System.Guid> _baanId;
    
    	[DataMember]
        public System.DateTime Datum 
    	{ 
    		get { return _datum; } 
    		set { SetProperty(ref _datum, value); } 
    	}
    
    	[IgnoreDataMember]
    	private System.DateTime _datum;
    
    	[DataMember]
        public System.TimeSpan Tijd 
    	{ 
    		get { return _tijd; } 
    		set { SetProperty(ref _tijd, value); } 
    	}
    
    	[IgnoreDataMember]
    	private System.TimeSpan _tijd;
    
    	[DataMember]
        public System.TimeSpan Duur 
    	{ 
    		get { return _duur; } 
    		set { SetProperty(ref _duur, value); } 
    	}
    
    	[IgnoreDataMember]
    	private System.TimeSpan _duur;
    
    	[DataMember]
        public ReserveringSoort Soort 
    	{ 
    		get { return _soort; } 
    		set { SetProperty(ref _soort, value); } 
    	}
    
    	[IgnoreDataMember]
    	private ReserveringSoort _soort;
    
    	[DataMember]
        public string Beschrijving 
    	{ 
    		get { return _beschrijving; } 
    		set { SetProperty(ref _beschrijving, value); } 
    	}
    
    	[IgnoreDataMember]
    	private string _beschrijving;
    
    	[DataMember]
        public Nullable<System.Guid> Gebruiker_Een 
    	{ 
    		get { return _gebruiker_Een; } 
    		set { SetProperty(ref _gebruiker_Een, value); } 
    	}
    
    	[IgnoreDataMember]
    	private Nullable<System.Guid> _gebruiker_Een;
    
    	[DataMember]
        public Nullable<System.Guid> Gebruiker_Twee 
    	{ 
    		get { return _gebruiker_Twee; } 
    		set { SetProperty(ref _gebruiker_Twee, value); } 
    	}
    
    	[IgnoreDataMember]
    	private Nullable<System.Guid> _gebruiker_Twee;
    
    	[DataMember]
        public Nullable<System.Guid> Gebruiker_Drie 
    	{ 
    		get { return _gebruiker_Drie; } 
    		set { SetProperty(ref _gebruiker_Drie, value); } 
    	}
    
    	[IgnoreDataMember]
    	private Nullable<System.Guid> _gebruiker_Drie;
    
    	[DataMember]
        public Nullable<System.Guid> Gebruiker_Vier 
    	{ 
    		get { return _gebruiker_Vier; } 
    		set { SetProperty(ref _gebruiker_Vier, value); } 
    	}
    
    	[IgnoreDataMember]
    	private Nullable<System.Guid> _gebruiker_Vier;
    
    	[DataMember]
        public bool Final 
    	{ 
    		get { return _final; } 
    		set { SetProperty(ref _final, value); } 
    	}
    
    	[IgnoreDataMember]
    	private bool _final;
    
    
    
    	//[DataMember]
    	[IgnoreDataMember]
        public virtual ClubCloud_Baan ClubCloud_Baan { get; set; }
    
    	//[DataMember]
    	[IgnoreDataMember]
        public virtual ClubCloud_Gebruiker ClubCloud_Gebruiker_Een { get; set; }
    
    	//[DataMember]
    	[IgnoreDataMember]
        public virtual ClubCloud_Gebruiker ClubCloud_Gebruiker_Twee { get; set; }
    
    	//[DataMember]
    	[IgnoreDataMember]
        public virtual ClubCloud_Gebruiker ClubCloud_Gebruiker_Drie { get; set; }
    
    	//[DataMember]
    	[IgnoreDataMember]
        public virtual ClubCloud_Gebruiker ClubCloud_Gebruiker_Vier { get; set; }
    
        public event PropertyChangedEventHandler PropertyChanged;
        public event EventHandler<DataErrorsChangedEventArgs> ErrorsChanged;
    
        private Dictionary<string, string> _errors = new Dictionary<string, string>();
    
        protected bool SetProperty<T>(ref T storage, T value, [CallerMemberName] String propertyName = null)
        {
            if (object.Equals(storage, value)) return false;
    
            try
            {
                storage = value;
                this.OnPropertyChanged(propertyName);
                return true;
            }
            catch (Exception ex)
            {
                _errors.Add(propertyName, ex.Message);
                return false;
            }
                
        }
    
    
        protected void OnPropertyChanged([CallerMemberName] string propertyName = null)
        {
            var eventHandler = this.PropertyChanged;
            if (eventHandler != null)
            {
                eventHandler(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
    	[IgnoreDataMember]
        public string Error
        {
            get
            {
                return string.Empty;
            }
        }
    
    	[IgnoreDataMember]
        public string this[string columnName]
        {
            get
            {
                if (_errors.ContainsKey(columnName))
                    return _errors[columnName];
                return string.Empty;
            }
        }
    
            
        public System.Collections.IEnumerable GetErrors(string propertyName)
        {
            return _errors[propertyName];
        }
    
    	[IgnoreDataMember]
        public bool HasErrors
        {
            get 
            { 
                if(_errors != null)
                    return (_errors.Count > 0);
                return false;
            }
        }
    }
}
