//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClubCloud.Model
{
    using System;
    using System.Runtime.Serialization;
    using System.Collections.ObjectModel;
    
    using System.ComponentModel;
    using System.Runtime.CompilerServices;
    using System.Data.Entity.ModelConfiguration;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    
    [Serializable]
    [KnownType(typeof(ClubCloud_Vereniging))]
    [KnownType(typeof(ClubCloud_District))]
    [KnownType(typeof(ClubCloud_Accommodatie))]
    [KnownType(typeof(ClubCloud_Address))]
    [DataContract]
    [TypeDescriptionProvider(typeof(ClubCloud_Regio_TypeDescriptionProvider))]
    public partial class ClubCloud_Regio : INotifyPropertyChanged, IDataErrorInfo, INotifyDataErrorInfo, ICloneable
    {
    	public ClubCloud_Regio()
    	{
    		this.ClubCloud_Vereniging = new ObservableCollection<ClubCloud_Vereniging>();
    		this.ClubCloud_District = new ObservableCollection<ClubCloud_District>();
    		this.ClubCloud_Accommodatie = new ObservableCollection<ClubCloud_Accommodatie>();
    		this.ClubCloud_Address = new ObservableCollection<ClubCloud_Address>();
    	}
          
    	//[Key()]
    	[DatabaseGenerated(DatabaseGeneratedOption.None)]
    	[DataMember]
    	public System.Guid Id 
    	{ 
    		get { return _id; } 
    		set { SetProperty(ref _id, value); } 
    	}
    
    	[IgnoreDataMember]
    	private System.Guid _id;
    
    	[DataMember]
    	public string Naam 
    	{ 
    		get { return _naam; } 
    		set { SetProperty(ref _naam, value); } 
    	}
    
    	[IgnoreDataMember]
    	private string _naam;
    
    	[DataMember]
    	public string EmailKNLTB 
    	{ 
    		get { return _emailKNLTB; } 
    		set { SetProperty(ref _emailKNLTB, value); } 
    	}
    
    	[IgnoreDataMember]
    	private string _emailKNLTB;
    
    	[DataMember]
    	public string TelefoonAvond 
    	{ 
    		get { return _telefoonAvond; } 
    		set { SetProperty(ref _telefoonAvond, value); } 
    	}
    
    	[IgnoreDataMember]
    	private string _telefoonAvond;
    
    	[DataMember]
    	public string TelefoonOverdag 
    	{ 
    		get { return _telefoonOverdag; } 
    		set { SetProperty(ref _telefoonOverdag, value); } 
    	}
    
    	[IgnoreDataMember]
    	private string _telefoonOverdag;
    
    	[DataMember]
    	public string Fax 
    	{ 
    		get { return _fax; } 
    		set { SetProperty(ref _fax, value); } 
    	}
    
    	[IgnoreDataMember]
    	private string _fax;
    
    	[DataMember]
    	public ActiefSoort Actief 
    	{ 
    		get { return _actief; } 
    		set { SetProperty(ref _actief, value); } 
    	}
    
    	[IgnoreDataMember]
    	private ActiefSoort _actief;
    
    
    
    	//[DataMember]
    	[IgnoreDataMember]
    	public virtual ObservableCollection<ClubCloud_Vereniging> ClubCloud_Vereniging { get; set; }
    
    	//[DataMember]
    	[IgnoreDataMember]
    	public virtual ObservableCollection<ClubCloud_District> ClubCloud_District { get; set; }
    
    	//[DataMember]
    	[IgnoreDataMember]
    	public virtual ObservableCollection<ClubCloud_Accommodatie> ClubCloud_Accommodatie { get; set; }
    
    	//[DataMember]
    	[IgnoreDataMember]
    	public virtual ObservableCollection<ClubCloud_Address> ClubCloud_Address { get; set; }
    
    	public event PropertyChangedEventHandler PropertyChanged;
    	public event EventHandler<DataErrorsChangedEventArgs> ErrorsChanged;
    
    	private Dictionary<string, string> _errors = new Dictionary<string, string>();
    
    	protected bool SetProperty<T>(ref T storage, T value, [CallerMemberName] String propertyName = null)
    	{
    		if (object.Equals(storage, value)) return false;
    
    		try
    		{
    			storage = value;
    			this.OnPropertyChanged(propertyName);
    			return true;
    		}
    		catch (Exception ex)
    		{
    			_errors.Add(propertyName, ex.Message);
    			return false;
    		}
    			
    	}
    
    
    	protected void OnPropertyChanged([CallerMemberName] string propertyName = null)
    	{
    		var eventHandler = this.PropertyChanged;
    		if (eventHandler != null)
    		{
    			eventHandler(this, new PropertyChangedEventArgs(propertyName));
    		}
    	}
    
    	protected void OnErrorsChanged(object sender, DataErrorsChangedEventArgs e = null)
    	{
    		var eventHandler = this.ErrorsChanged;
    		if (eventHandler != null)
    		{
    			eventHandler(this, e);
    		}
    	}
    
    	[IgnoreDataMember]
    	public string Error
    	{
    		get
    		{
    			return string.Empty;
    		}
    	}
    
    	[IgnoreDataMember]
    	public string this[string columnName]
    	{
    		get
    		{
    			if (_errors.ContainsKey(columnName))
    				return _errors[columnName];
    			return string.Empty;
    		}
    	}
    
    		
    	public System.Collections.IEnumerable GetErrors(string propertyName)
    	{
    		return _errors[propertyName];
    	}
    
    	[IgnoreDataMember]
    	public bool HasErrors
    	{
    		get 
    		{ 
    			if(_errors != null)
    				return (_errors.Count > 0);
    			return false;
    		}
    	}
    
    	public object Clone()
        {
            return (this.MemberwiseClone());
        }
    }
    
    
    public class ClubCloud_Regio_Mapping : EntityTypeConfiguration<ClubCloud_Regio>
    {
    	public ClubCloud_Regio_Mapping() 
    	{
    		//System.Guid
    		HasKey(m => m.Id);
    	}
    }
    
    public class ClubCloud_Regio_TypeDescriptionProvider : TypeDescriptionProvider
    {
    	private ICustomTypeDescriptor td;
    
    	public ClubCloud_Regio_TypeDescriptionProvider() : this(TypeDescriptor.GetProvider(typeof(ClubCloud_Regio))) {}
    
    	public ClubCloud_Regio_TypeDescriptionProvider(TypeDescriptionProvider parent) : base(parent) {}
    
    	public override ICustomTypeDescriptor GetTypeDescriptor(Type objectType, object instance)
    	{
    		if (td == null)
    		{
    			td = base.GetTypeDescriptor(objectType, instance);
    			td = new ClubCloud_Regio_CustomTypeDescriptor(td);
    		}
    
    		return td;
    	}        
    }
    
    public class ClubCloud_Regio_CustomTypeDescriptor : CustomTypeDescriptor
    {       
    	public ClubCloud_Regio_CustomTypeDescriptor(ICustomTypeDescriptor parent) : base(parent) {}
    
    	public override PropertyDescriptorCollection GetProperties()
    	{
    		PropertyDescriptorCollection cols = base.GetProperties();
    		
    		return cols;            
    	}     
    } 
    
}
