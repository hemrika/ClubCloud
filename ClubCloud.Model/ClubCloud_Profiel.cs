//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClubCloud.Model
{
    using System;
    using System.Runtime.Serialization;
    using System.Collections.Generic;
    
    using System.ComponentModel;
    using System.Runtime.CompilerServices;
    
    [Serializable]
    [KnownType(typeof(ClubCloud_Gebruiker))]
    [DataContract(IsReference = true)]
    
    public partial class ClubCloud_Profiel : INotifyPropertyChanged, IDataErrorInfo, INotifyDataErrorInfo
    {
    	[DataMember]
        public System.Guid Id 
    	{ 
    		get { return _id; } 
    		set { SetProperty(ref _id, value); } 
    	}
    
    	[IgnoreDataMember]
    	private System.Guid _id;
    
    	[DataMember]
        public System.DateTime Datum 
    	{ 
    		get { return _datum; } 
    		set { SetProperty(ref _datum, value); } 
    	}
    
    	[IgnoreDataMember]
    	private System.DateTime _datum;
    
    	[DataMember]
        public string Bondsnummer 
    	{ 
    		get { return _bondsnummer; } 
    		set { SetProperty(ref _bondsnummer, value); } 
    	}
    
    	[IgnoreDataMember]
    	private string _bondsnummer;
    
    	[DataMember]
        public Nullable<System.Guid> GebruikerId 
    	{ 
    		get { return _gebruikerId; } 
    		set { SetProperty(ref _gebruikerId, value); } 
    	}
    
    	[IgnoreDataMember]
    	private Nullable<System.Guid> _gebruikerId;
    
    	[DataMember]
        public int Enkel_Aantal 
    	{ 
    		get { return _enkel_Aantal; } 
    		set { SetProperty(ref _enkel_Aantal, value); } 
    	}
    
    	[IgnoreDataMember]
    	private int _enkel_Aantal;
    
    	[DataMember]
        public int Dubbel_aantal 
    	{ 
    		get { return _dubbel_aantal; } 
    		set { SetProperty(ref _dubbel_aantal, value); } 
    	}
    
    	[IgnoreDataMember]
    	private int _dubbel_aantal;
    
    	[DataMember]
        public int Enkel_Speelsterkte 
    	{ 
    		get { return _enkel_Speelsterkte; } 
    		set { SetProperty(ref _enkel_Speelsterkte, value); } 
    	}
    
    	[IgnoreDataMember]
    	private int _enkel_Speelsterkte;
    
    	[DataMember]
        public int Enkel_Speelsterkte_Vorig 
    	{ 
    		get { return _enkel_Speelsterkte_Vorig; } 
    		set { SetProperty(ref _enkel_Speelsterkte_Vorig, value); } 
    	}
    
    	[IgnoreDataMember]
    	private int _enkel_Speelsterkte_Vorig;
    
    	[DataMember]
        public int Dubbel_Speelsterkte 
    	{ 
    		get { return _dubbel_Speelsterkte; } 
    		set { SetProperty(ref _dubbel_Speelsterkte, value); } 
    	}
    
    	[IgnoreDataMember]
    	private int _dubbel_Speelsterkte;
    
    	[DataMember]
        public int Dubbel_Speelsterkte_Vorig 
    	{ 
    		get { return _dubbel_Speelsterkte_Vorig; } 
    		set { SetProperty(ref _dubbel_Speelsterkte_Vorig, value); } 
    	}
    
    	[IgnoreDataMember]
    	private int _dubbel_Speelsterkte_Vorig;
    
    	[DataMember]
        public decimal Enkel_Rating_Eindejaar 
    	{ 
    		get { return _enkel_Rating_Eindejaar; } 
    		set { SetProperty(ref _enkel_Rating_Eindejaar, value); } 
    	}
    
    	[IgnoreDataMember]
    	private decimal _enkel_Rating_Eindejaar;
    
    	[DataMember]
        public decimal Dubbel_Rating_Eindejaar 
    	{ 
    		get { return _dubbel_Rating_Eindejaar; } 
    		set { SetProperty(ref _dubbel_Rating_Eindejaar, value); } 
    	}
    
    	[IgnoreDataMember]
    	private decimal _dubbel_Rating_Eindejaar;
    
    	[DataMember]
        public decimal Enkel_Rating_Actueel 
    	{ 
    		get { return _enkel_Rating_Actueel; } 
    		set { SetProperty(ref _enkel_Rating_Actueel, value); } 
    	}
    
    	[IgnoreDataMember]
    	private decimal _enkel_Rating_Actueel;
    
    	[DataMember]
        public decimal Dubbel_Rating_Actueel 
    	{ 
    		get { return _dubbel_Rating_Actueel; } 
    		set { SetProperty(ref _dubbel_Rating_Actueel, value); } 
    	}
    
    	[IgnoreDataMember]
    	private decimal _dubbel_Rating_Actueel;
    
    	[DataMember]
        public string Actief 
    	{ 
    		get { return _actief; } 
    		set { SetProperty(ref _actief, value); } 
    	}
    
    	[IgnoreDataMember]
    	private string _actief;
    
    	[DataMember]
        public System.DateTime Gewijzigd 
    	{ 
    		get { return _gewijzigd; } 
    		set { SetProperty(ref _gewijzigd, value); } 
    	}
    
    	[IgnoreDataMember]
    	private System.DateTime _gewijzigd;
    
    
    
    	//[DataMember]
    	[IgnoreDataMember]
        public virtual ClubCloud_Gebruiker ClubCloud_Gebruiker { get; set; }
    
        public event PropertyChangedEventHandler PropertyChanged;
        public event EventHandler<DataErrorsChangedEventArgs> ErrorsChanged;
    
        private Dictionary<string, string> _errors = new Dictionary<string, string>();
    
        protected bool SetProperty<T>(ref T storage, T value, [CallerMemberName] String propertyName = null)
        {
            if (object.Equals(storage, value)) return false;
    
            try
            {
                storage = value;
                this.OnPropertyChanged(propertyName);
                return true;
            }
            catch (Exception ex)
            {
                _errors.Add(propertyName, ex.Message);
                return false;
            }
                
        }
    
    
        protected void OnPropertyChanged([CallerMemberName] string propertyName = null)
        {
            var eventHandler = this.PropertyChanged;
            if (eventHandler != null)
            {
                eventHandler(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
    	[IgnoreDataMember]
        public string Error
        {
            get
            {
                return string.Empty;
            }
        }
    
    	[IgnoreDataMember]
        public string this[string columnName]
        {
            get
            {
                if (_errors.ContainsKey(columnName))
                    return _errors[columnName];
                return string.Empty;
            }
        }
    
            
        public System.Collections.IEnumerable GetErrors(string propertyName)
        {
            return _errors[propertyName];
        }
    
    	[IgnoreDataMember]
        public bool HasErrors
        {
            get 
            { 
                if(_errors != null)
                    return (_errors.Count > 0);
                return false;
            }
        }
    }
}
