//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClubCloud.Model
{
    using System;
    using System.Runtime.Serialization;
    using System.Collections.ObjectModel;
    
    using System.ComponentModel;
    using System.Runtime.CompilerServices;
    using System.Data.Entity.ModelConfiguration;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    
    [Serializable]
    [KnownType(typeof(ClubCloud_Vereniging))]
    [KnownType(typeof(ClubCloud_District))]
    [KnownType(typeof(ClubCloud_Regio))]
    [KnownType(typeof(ClubCloud_Baanblok))]
    [KnownType(typeof(ClubCloud_Baan))]
    [KnownType(typeof(ClubCloud_BaanSpeciaal))]
    [KnownType(typeof(ClubCloud_Address))]
    [DataContract]
    [TypeDescriptionProvider(typeof(ClubCloud_Accommodatie_TypeDescriptionProvider))]
    public partial class ClubCloud_Accommodatie : INotifyPropertyChanged, IDataErrorInfo, INotifyDataErrorInfo, ICloneable
    {
    	public ClubCloud_Accommodatie()
    	{
    		this.BanenAantal = 0;
    		this.BanenAantalBinnen = 0;
    		this.Blaashal = false;
    		this.Oefenmuren = false;
    		this.OefenmurenAantal = 0;
    		this.Minibanen = false;
    		this.MinibanenAantal = 0;
    		this.Overkapping = false;
    		this.AantalParkeerplaatsen = 0;
    		this.AantalParkeerplaatsenMindervalide = 0;
    		this.ClubCloud_Vereniging = new ObservableCollection<ClubCloud_Vereniging>();
    		this.ClubCloud_Baanblok = new ObservableCollection<ClubCloud_Baanblok>();
    		this.ClubCloud_Baan = new ObservableCollection<ClubCloud_Baan>();
    		this.ClubCloud_BaanSpeciaal = new ObservableCollection<ClubCloud_BaanSpeciaal>();
    		this.ClubCloud_Address = new ObservableCollection<ClubCloud_Address>();
    	}
          
    	//[Key()]
    	[DatabaseGenerated(DatabaseGeneratedOption.None)]
    	[DataMember]
    	public System.Guid Id 
    	{ 
    		get { return _id; } 
    		set { SetProperty(ref _id, value); } 
    	}
    
    	[IgnoreDataMember]
    	private System.Guid _id;
    
    	[DataMember]
    	public string Naam 
    	{ 
    		get { return _naam; } 
    		set { SetProperty(ref _naam, value); } 
    	}
    
    	[IgnoreDataMember]
    	private string _naam;
    
    	[DataMember]
    	public int BanenAantal 
    	{ 
    		get { return _banenAantal; } 
    		set { SetProperty(ref _banenAantal, value); } 
    	}
    
    	[IgnoreDataMember]
    	private int _banenAantal;
    
    	[DataMember]
    	public int BanenAantalBinnen 
    	{ 
    		get { return _banenAantalBinnen; } 
    		set { SetProperty(ref _banenAantalBinnen, value); } 
    	}
    
    	[IgnoreDataMember]
    	private int _banenAantalBinnen;
    
    	[DataMember]
    	public int BanenAantalBuiten 
    	{ 
    		get { return _banenAantalBuiten; } 
    		set { SetProperty(ref _banenAantalBuiten, value); } 
    	}
    
    	[IgnoreDataMember]
    	private int _banenAantalBuiten;
    
    	[DataMember]
    	public Nullable<bool> Blaashal 
    	{ 
    		get { return _blaashal; } 
    		set { SetProperty(ref _blaashal, value); } 
    	}
    
    	[IgnoreDataMember]
    	private Nullable<bool> _blaashal;
    
    	[DataMember]
    	public string BlaashalSoort 
    	{ 
    		get { return _blaashalSoort; } 
    		set { SetProperty(ref _blaashalSoort, value); } 
    	}
    
    	[IgnoreDataMember]
    	private string _blaashalSoort;
    
    	[DataMember]
    	public Nullable<int> BlaashalAantalBanen 
    	{ 
    		get { return _blaashalAantalBanen; } 
    		set { SetProperty(ref _blaashalAantalBanen, value); } 
    	}
    
    	[IgnoreDataMember]
    	private Nullable<int> _blaashalAantalBanen;
    
    	[DataMember]
    	public bool Playgrounds 
    	{ 
    		get { return _playgrounds; } 
    		set { SetProperty(ref _playgrounds, value); } 
    	}
    
    	[IgnoreDataMember]
    	private bool _playgrounds;
    
    	[DataMember]
    	public int PlaygroundsAantal 
    	{ 
    		get { return _playgroundsAantal; } 
    		set { SetProperty(ref _playgroundsAantal, value); } 
    	}
    
    	[IgnoreDataMember]
    	private int _playgroundsAantal;
    
    	[DataMember]
    	public bool Oefenmuren 
    	{ 
    		get { return _oefenmuren; } 
    		set { SetProperty(ref _oefenmuren, value); } 
    	}
    
    	[IgnoreDataMember]
    	private bool _oefenmuren;
    
    	[DataMember]
    	public int OefenmurenAantal 
    	{ 
    		get { return _oefenmurenAantal; } 
    		set { SetProperty(ref _oefenmurenAantal, value); } 
    	}
    
    	[IgnoreDataMember]
    	private int _oefenmurenAantal;
    
    	[DataMember]
    	public bool Minibanen 
    	{ 
    		get { return _minibanen; } 
    		set { SetProperty(ref _minibanen, value); } 
    	}
    
    	[IgnoreDataMember]
    	private bool _minibanen;
    
    	[DataMember]
    	public int MinibanenAantal 
    	{ 
    		get { return _minibanenAantal; } 
    		set { SetProperty(ref _minibanenAantal, value); } 
    	}
    
    	[IgnoreDataMember]
    	private int _minibanenAantal;
    
    	[DataMember]
    	public Nullable<bool> Overkapping 
    	{ 
    		get { return _overkapping; } 
    		set { SetProperty(ref _overkapping, value); } 
    	}
    
    	[IgnoreDataMember]
    	private Nullable<bool> _overkapping;
    
    	[DataMember]
    	public string OverkappingSoort 
    	{ 
    		get { return _overkappingSoort; } 
    		set { SetProperty(ref _overkappingSoort, value); } 
    	}
    
    	[IgnoreDataMember]
    	private string _overkappingSoort;
    
    	[DataMember]
    	public int AantalParkeerplaatsen 
    	{ 
    		get { return _aantalParkeerplaatsen; } 
    		set { SetProperty(ref _aantalParkeerplaatsen, value); } 
    	}
    
    	[IgnoreDataMember]
    	private int _aantalParkeerplaatsen;
    
    	[DataMember]
    	public int AantalParkeerplaatsenMindervalide 
    	{ 
    		get { return _aantalParkeerplaatsenMindervalide; } 
    		set { SetProperty(ref _aantalParkeerplaatsenMindervalide, value); } 
    	}
    
    	[IgnoreDataMember]
    	private int _aantalParkeerplaatsenMindervalide;
    
    	[DataMember]
    	public bool MetOVBereikbaar 
    	{ 
    		get { return _metOVBereikbaar; } 
    		set { SetProperty(ref _metOVBereikbaar, value); } 
    	}
    
    	[IgnoreDataMember]
    	private bool _metOVBereikbaar;
    
    	[DataMember]
    	public string Email 
    	{ 
    		get { return _email; } 
    		set { SetProperty(ref _email, value); } 
    	}
    
    	[IgnoreDataMember]
    	private string _email;
    
    	[DataMember]
    	public string Telefoon 
    	{ 
    		get { return _telefoon; } 
    		set { SetProperty(ref _telefoon, value); } 
    	}
    
    	[IgnoreDataMember]
    	private string _telefoon;
    
    	[DataMember]
    	public string Website 
    	{ 
    		get { return _website; } 
    		set { SetProperty(ref _website, value); } 
    	}
    
    	[IgnoreDataMember]
    	private string _website;
    
    	[DataMember]
    	public string ClubhuisStatus 
    	{ 
    		get { return _clubhuisStatus; } 
    		set { SetProperty(ref _clubhuisStatus, value); } 
    	}
    
    	[IgnoreDataMember]
    	private string _clubhuisStatus;
    
    	[DataMember]
    	public string ClubhuisBouwjaar 
    	{ 
    		get { return _clubhuisBouwjaar; } 
    		set { SetProperty(ref _clubhuisBouwjaar, value); } 
    	}
    
    	[IgnoreDataMember]
    	private string _clubhuisBouwjaar;
    
    	[DataMember]
    	public string ClubhuisBouwaard 
    	{ 
    		get { return _clubhuisBouwaard; } 
    		set { SetProperty(ref _clubhuisBouwaard, value); } 
    	}
    
    	[IgnoreDataMember]
    	private string _clubhuisBouwaard;
    
    	[DataMember]
    	public Nullable<int> ClubhuisOppervlakte 
    	{ 
    		get { return _clubhuisOppervlakte; } 
    		set { SetProperty(ref _clubhuisOppervlakte, value); } 
    	}
    
    	[IgnoreDataMember]
    	private Nullable<int> _clubhuisOppervlakte;
    
    	[DataMember]
    	public string ClubhuisLigging 
    	{ 
    		get { return _clubhuisLigging; } 
    		set { SetProperty(ref _clubhuisLigging, value); } 
    	}
    
    	[IgnoreDataMember]
    	private string _clubhuisLigging;
    
    	[DataMember]
    	public string ClubhuisBeveiliging 
    	{ 
    		get { return _clubhuisBeveiliging; } 
    		set { SetProperty(ref _clubhuisBeveiliging, value); } 
    	}
    
    	[IgnoreDataMember]
    	private string _clubhuisBeveiliging;
    
    	[DataMember]
    	public string HalStatus 
    	{ 
    		get { return _halStatus; } 
    		set { SetProperty(ref _halStatus, value); } 
    	}
    
    	[IgnoreDataMember]
    	private string _halStatus;
    
    	[DataMember]
    	public string HalBouwjaar 
    	{ 
    		get { return _halBouwjaar; } 
    		set { SetProperty(ref _halBouwjaar, value); } 
    	}
    
    	[IgnoreDataMember]
    	private string _halBouwjaar;
    
    	[DataMember]
    	public string HalBouwaard 
    	{ 
    		get { return _halBouwaard; } 
    		set { SetProperty(ref _halBouwaard, value); } 
    	}
    
    	[IgnoreDataMember]
    	private string _halBouwaard;
    
    	[DataMember]
    	public Nullable<int> HalOppervlakte 
    	{ 
    		get { return _halOppervlakte; } 
    		set { SetProperty(ref _halOppervlakte, value); } 
    	}
    
    	[IgnoreDataMember]
    	private Nullable<int> _halOppervlakte;
    
    	[DataMember]
    	public bool RolStoeltoegankelijk 
    	{ 
    		get { return _rolStoeltoegankelijk; } 
    		set { SetProperty(ref _rolStoeltoegankelijk, value); } 
    	}
    
    	[IgnoreDataMember]
    	private bool _rolStoeltoegankelijk;
    
    	[DataMember]
    	public string Speeltoestellen 
    	{ 
    		get { return _speeltoestellen; } 
    		set { SetProperty(ref _speeltoestellen, value); } 
    	}
    
    	[IgnoreDataMember]
    	private string _speeltoestellen;
    
    	[DataMember]
    	public Nullable<int> TotaalAantalWasKleedruimte 
    	{ 
    		get { return _totaalAantalWasKleedruimte; } 
    		set { SetProperty(ref _totaalAantalWasKleedruimte, value); } 
    	}
    
    	[IgnoreDataMember]
    	private Nullable<int> _totaalAantalWasKleedruimte;
    
    	[DataMember]
    	public Nullable<int> ValideParkeerplaatsen 
    	{ 
    		get { return _valideParkeerplaatsen; } 
    		set { SetProperty(ref _valideParkeerplaatsen, value); } 
    	}
    
    	[IgnoreDataMember]
    	private Nullable<int> _valideParkeerplaatsen;
    
    	[DataMember]
    	public bool WasruimteClubhuisAanwezig 
    	{ 
    		get { return _wasruimteClubhuisAanwezig; } 
    		set { SetProperty(ref _wasruimteClubhuisAanwezig, value); } 
    	}
    
    	[IgnoreDataMember]
    	private bool _wasruimteClubhuisAanwezig;
    
    	[DataMember]
    	public Nullable<System.Guid> DistrictId 
    	{ 
    		get { return _districtId; } 
    		set { SetProperty(ref _districtId, value); } 
    	}
    
    	[IgnoreDataMember]
    	private Nullable<System.Guid> _districtId;
    
    	[DataMember]
    	public Nullable<System.Guid> RegioId 
    	{ 
    		get { return _regioId; } 
    		set { SetProperty(ref _regioId, value); } 
    	}
    
    	[IgnoreDataMember]
    	private Nullable<System.Guid> _regioId;
    
    	[DataMember]
    	public ActiefSoort Actief 
    	{ 
    		get { return _actief; } 
    		set { SetProperty(ref _actief, value); } 
    	}
    
    	[IgnoreDataMember]
    	private ActiefSoort _actief;
    
    	[DataMember]
    	public System.DateTime Gewijzigd 
    	{ 
    		get { return _gewijzigd; } 
    		set { SetProperty(ref _gewijzigd, value); } 
    	}
    
    	[IgnoreDataMember]
    	private System.DateTime _gewijzigd;
    
    
    
    	//[DataMember]
    	[IgnoreDataMember]
    	public virtual ObservableCollection<ClubCloud_Vereniging> ClubCloud_Vereniging { get; set; }
    
    	//[DataMember]
    	[IgnoreDataMember]
    	public virtual ClubCloud_District ClubCloud_District { get; set; }
    
    	//[DataMember]
    	[IgnoreDataMember]
    	public virtual ClubCloud_Regio ClubCloud_Regio { get; set; }
    
    	//[DataMember]
    	[IgnoreDataMember]
    	public virtual ObservableCollection<ClubCloud_Baanblok> ClubCloud_Baanblok { get; set; }
    
    	//[DataMember]
    	[IgnoreDataMember]
    	public virtual ObservableCollection<ClubCloud_Baan> ClubCloud_Baan { get; set; }
    
    	//[DataMember]
    	[IgnoreDataMember]
    	public virtual ObservableCollection<ClubCloud_BaanSpeciaal> ClubCloud_BaanSpeciaal { get; set; }
    
    	//[DataMember]
    	[IgnoreDataMember]
    	public virtual ObservableCollection<ClubCloud_Address> ClubCloud_Address { get; set; }
    
    	public event PropertyChangedEventHandler PropertyChanged;
    	public event EventHandler<DataErrorsChangedEventArgs> ErrorsChanged;
    
    	private Dictionary<string, string> _errors = new Dictionary<string, string>();
    
    	protected bool SetProperty<T>(ref T storage, T value, [CallerMemberName] String propertyName = null)
    	{
    		if (object.Equals(storage, value)) return false;
    
    		try
    		{
    			storage = value;
    			this.OnPropertyChanged(propertyName);
    			return true;
    		}
    		catch (Exception ex)
    		{
    			_errors.Add(propertyName, ex.Message);
    			return false;
    		}
    			
    	}
    
    
    	protected void OnPropertyChanged([CallerMemberName] string propertyName = null)
    	{
    		var eventHandler = this.PropertyChanged;
    		if (eventHandler != null)
    		{
    			eventHandler(this, new PropertyChangedEventArgs(propertyName));
    		}
    	}
    
    	protected void OnErrorsChanged(object sender, DataErrorsChangedEventArgs e = null)
    	{
    		var eventHandler = this.ErrorsChanged;
    		if (eventHandler != null)
    		{
    			eventHandler(this, e);
    		}
    	}
    
    	[IgnoreDataMember]
    	public string Error
    	{
    		get
    		{
    			return string.Empty;
    		}
    	}
    
    	[IgnoreDataMember]
    	public string this[string columnName]
    	{
    		get
    		{
    			if (_errors.ContainsKey(columnName))
    				return _errors[columnName];
    			return string.Empty;
    		}
    	}
    
    		
    	public System.Collections.IEnumerable GetErrors(string propertyName)
    	{
    		return _errors[propertyName];
    	}
    
    	[IgnoreDataMember]
    	public bool HasErrors
    	{
    		get 
    		{ 
    			if(_errors != null)
    				return (_errors.Count > 0);
    			return false;
    		}
    	}
    
    	public object Clone()
        {
            return (this.MemberwiseClone());
        }
    }
    
    
    public class ClubCloud_Accommodatie_Mapping : EntityTypeConfiguration<ClubCloud_Accommodatie>
    {
    	public ClubCloud_Accommodatie_Mapping() 
    	{
    		//System.Guid
    		HasKey(m => m.Id);
    	}
    }
    
    public class ClubCloud_Accommodatie_TypeDescriptionProvider : TypeDescriptionProvider
    {
    	private ICustomTypeDescriptor td;
    
    	public ClubCloud_Accommodatie_TypeDescriptionProvider() : this(TypeDescriptor.GetProvider(typeof(ClubCloud_Accommodatie))) {}
    
    	public ClubCloud_Accommodatie_TypeDescriptionProvider(TypeDescriptionProvider parent) : base(parent) {}
    
    	public override ICustomTypeDescriptor GetTypeDescriptor(Type objectType, object instance)
    	{
    		if (td == null)
    		{
    			td = base.GetTypeDescriptor(objectType, instance);
    			td = new ClubCloud_Accommodatie_CustomTypeDescriptor(td);
    		}
    
    		return td;
    	}        
    }
    
    public class ClubCloud_Accommodatie_CustomTypeDescriptor : CustomTypeDescriptor
    {       
    	public ClubCloud_Accommodatie_CustomTypeDescriptor(ICustomTypeDescriptor parent) : base(parent) {}
    
    	public override PropertyDescriptorCollection GetProperties()
    	{
    		PropertyDescriptorCollection cols = base.GetProperties();
    		
    		List<PropertyDescriptor> extended = new List<PropertyDescriptor>();
    		foreach (PropertyDescriptor item in cols)
    		{
    			extended.Add(item);
    		}
    		//ClubCloud_District
    		PropertyDescriptor ClubCloud_District_Columns = cols["ClubCloud_District"];
    		PropertyDescriptorCollection ClubCloud_District_Children = ClubCloud_District_Columns.GetChildProperties();
    
    		PropertyDescriptor ClubCloud_District_Id = new BeheerPropertyDescriptor(ClubCloud_District_Columns,ClubCloud_District_Children["Id"],"ClubCloud_District_Id");
    		extended.Add(ClubCloud_District_Id);
    
    		PropertyDescriptor ClubCloud_District_Naam = new BeheerPropertyDescriptor(ClubCloud_District_Columns,ClubCloud_District_Children["Naam"],"ClubCloud_District_Naam");
    		extended.Add(ClubCloud_District_Naam);
    
    		PropertyDescriptor ClubCloud_District_Beschrijving = new BeheerPropertyDescriptor(ClubCloud_District_Columns,ClubCloud_District_Children["Beschrijving"],"ClubCloud_District_Beschrijving");
    		extended.Add(ClubCloud_District_Beschrijving);
    
    		PropertyDescriptor ClubCloud_District_Omschrijving = new BeheerPropertyDescriptor(ClubCloud_District_Columns,ClubCloud_District_Children["Omschrijving"],"ClubCloud_District_Omschrijving");
    		extended.Add(ClubCloud_District_Omschrijving);
    
    		PropertyDescriptor ClubCloud_District_RegioId = new BeheerPropertyDescriptor(ClubCloud_District_Columns,ClubCloud_District_Children["RegioId"],"ClubCloud_District_RegioId");
    		extended.Add(ClubCloud_District_RegioId);
    
    		PropertyDescriptor ClubCloud_District_Actief = new BeheerPropertyDescriptor(ClubCloud_District_Columns,ClubCloud_District_Children["Actief"],"ClubCloud_District_Actief");
    		extended.Add(ClubCloud_District_Actief);
    
    
    		//ClubCloud_Regio
    		PropertyDescriptor ClubCloud_Regio_Columns = cols["ClubCloud_Regio"];
    		PropertyDescriptorCollection ClubCloud_Regio_Children = ClubCloud_Regio_Columns.GetChildProperties();
    
    		PropertyDescriptor ClubCloud_Regio_Id = new BeheerPropertyDescriptor(ClubCloud_Regio_Columns,ClubCloud_Regio_Children["Id"],"ClubCloud_Regio_Id");
    		extended.Add(ClubCloud_Regio_Id);
    
    		PropertyDescriptor ClubCloud_Regio_Naam = new BeheerPropertyDescriptor(ClubCloud_Regio_Columns,ClubCloud_Regio_Children["Naam"],"ClubCloud_Regio_Naam");
    		extended.Add(ClubCloud_Regio_Naam);
    
    		PropertyDescriptor ClubCloud_Regio_EmailKNLTB = new BeheerPropertyDescriptor(ClubCloud_Regio_Columns,ClubCloud_Regio_Children["EmailKNLTB"],"ClubCloud_Regio_EmailKNLTB");
    		extended.Add(ClubCloud_Regio_EmailKNLTB);
    
    		PropertyDescriptor ClubCloud_Regio_TelefoonAvond = new BeheerPropertyDescriptor(ClubCloud_Regio_Columns,ClubCloud_Regio_Children["TelefoonAvond"],"ClubCloud_Regio_TelefoonAvond");
    		extended.Add(ClubCloud_Regio_TelefoonAvond);
    
    		PropertyDescriptor ClubCloud_Regio_TelefoonOverdag = new BeheerPropertyDescriptor(ClubCloud_Regio_Columns,ClubCloud_Regio_Children["TelefoonOverdag"],"ClubCloud_Regio_TelefoonOverdag");
    		extended.Add(ClubCloud_Regio_TelefoonOverdag);
    
    		PropertyDescriptor ClubCloud_Regio_Fax = new BeheerPropertyDescriptor(ClubCloud_Regio_Columns,ClubCloud_Regio_Children["Fax"],"ClubCloud_Regio_Fax");
    		extended.Add(ClubCloud_Regio_Fax);
    
    		PropertyDescriptor ClubCloud_Regio_Actief = new BeheerPropertyDescriptor(ClubCloud_Regio_Columns,ClubCloud_Regio_Children["Actief"],"ClubCloud_Regio_Actief");
    		extended.Add(ClubCloud_Regio_Actief);
    
    
    		if(extended.Count > 0)
    		{
    			PropertyDescriptorCollection newcols = new PropertyDescriptorCollection(extended.ToArray());
    			return newcols;
    		}
    		return cols;            
    	}     
    } 
    
}
